name: $(Date:yyyyMMdd)$(Rev:.r)
trigger:
  branches:
    include:
      - staging
  paths:
    include:
      - terraform/*
      - config/*
      - modules/*

pr: none # Do not run on PR

# TEMPORARY
pool:
  name: Self-hosted

resources:
  repositories:
    - repository: infra-repo
      type: github
      name: OL-Smart-Clicker/infra-repo
      ref: refs/heads/staging
      endpoint: 'Smart Clicker 2.0'

variables:
  - name: ENVIRONMENT
    value: STAGING

stages:
- stage: Plan
  jobs:
  - job: Generate_TFPlan
    steps:
    # Install Terraform 1.11.2
    - task: TerraformInstaller@1
      displayName: 'Install Terraform 1.11.2'
      inputs:
        terraformVersion: 1.11.2

    # Initialize Terraform for Staging
    - task: TerraformCLI@1
      inputs:
        command: init
        workingDirectory: 'terraform'
        environmentServiceName: 'tf-pipeline-sc-staging'

    # Generate Terraform plan
    - task: TerraformCLI@1
      inputs:
        command: plan
        commandOptions: '-var-file=../config/$(ENVIRONMENT).tfvars -out=tfplan'
        workingDirectory: 'terraform'
        environmentServiceName: 'tf-pipeline-sc-staging'

    # Publish the tfplan artifact for later use in Apply
    - publish: $(System.DefaultWorkingDirectory)/terraform/tfplan
      artifact: tfplan-artif

- stage: Approve
  dependsOn: Plan
  jobs:
  - job: Manual_Approval
    pool: server
    steps:
    - task: ManualValidation@0
      inputs:
        instructions: 'Please review the Terraform plan and approve if the changes are acceptable.'
        onTimeout: 'reject'

- stage: Apply
  dependsOn: Approve
  jobs:
  - job: Execute_TFApply
    steps:
    - download: current
      artifact: tfplan-artif
    - task: TerraformInstaller@1
      displayName: 'Install Terraform 1.11.2'
      inputs:
        terraformVersion: 1.11.2
    - task: TerraformCLI@1
      inputs:
        command: init
        workingDirectory: 'terraform'
        environmentServiceName: 'tf-pipeline-sc-staging'
    - task: TerraformCLI@1
      inputs:
        command: apply
        commandOptions: '$(Pipeline.Workspace)/tfplan-artif/tfplan'  # vars embedded in tfplan
        workingDirectory: 'terraform'
        environmentServiceName: 'tf-pipeline-sc-staging'